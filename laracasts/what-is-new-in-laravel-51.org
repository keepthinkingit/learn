* STARTED What's New in Laravel 5.1
  Laravel 5.1 includes a variety of welcomed new features. Everything from broadcasting events, to massively improved testing facilities, to LTS support. As always, Laravel is setting the curve with this new release. Let's breeze through the new features that you'll be enjoying.

** DONE Adopting PSR-2
   CLOSED: [2018-07-18 Wed 09:19]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 09:19]
   Upon installing Laravel 5.1, the first thing you'll notice is that the style guide is a bit different. Laravel now adopts the PSR-2 coding standard. If you're not familiar, this is nothing more than a set of style guidelines for writing code.

** DONE Injecting Services With Blade
   CLOSED: [2018-07-18 Wed 09:33]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 09:33]
   Inspired by ASP.NET MVC 6, you may now inject services directly into your views. While it's not appropriate for everything, there are a number of situations where this technique will prove to be quite useful. Let me show you.
   - Method 1: View Composer
     #+BEGIN_SRC php
       View::composer('stats', function($view) {
           return $view->with('stats', app('App\Stats'));
       })
     #+END_SRC
   - Method 2: Inject in the =stats.blade.php=
     #+BEGIN_SRC php
       @inject('stats', 'App\Stats')
     #+END_SRC

** DONE Elixir Improvements
   CLOSED: [2018-07-18 Wed 10:04]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 10:04]
   In addition to a series of optimizations and consistency improvements, in Laravel 5.1, Elixir includes EcmaScript 6 compilation right out of the box, using the excellent Babel compiler.
   - ES2015 function
     #+BEGIN_SRC js
       let fun = () => true;


       let fun2 = a => a > 10;
       let fun3 = (a) => a > 10;
     #+END_SRC

** DONE Better Testing Facilities
   CLOSED: [2018-07-18 Wed 10:20]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 10:20]
   If you worked through the =Intuitive Integration Testing= series, you'll feel right at home in 5.1. Most of that API is now part of the base install. This means, you'll be writing incredibly readable integration tests in no time.

** DONE Model Factories
   CLOSED: [2018-07-18 Wed 11:22]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 11:22]
   Whether for database seeding or general testing, you're going to love model factories in Laravel 5.1. A single line of code can give you a huge amount of convenience and power.

** DONE Artisan Signatures
   CLOSED: [2018-07-18 Wed 11:39]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 11:39]
   In the past, defining arguments and options for an Artisan command was - to be frank - a big pain. For options, you needed to create a method that returned an array of arrays, where each one contained a sequence of values. It was up to you to memorize all of this. Thankfully, in Laravel 5.1, it's infinitely easier. In fact, it's as easy as defining a route.
   - $signature
     #+BEGIN_SRC php
       protected $signature = 'laracasts:greet {name}'; // need arguments

       protected $signature = 'laracasts:greet {name}'; // option arguments

       protected $signature = 'laracasts:greet {name=Joe}'; // default arguments

       protected $signature = 'laracasts:greet {name=Joe} {--greeting=Hi}'; // Option
     #+END_SRC
   - =$this->argument()=
   - =$this->options()=

** DONE Directory Changes
   CLOSED: [2018-07-18 Wed 12:27]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 12:27]
   You'll find that two directory names have been changed. "Commands" is now "Jobs", and "Handlers" is now "Listeners". Don't worry; these changes won't break your code. They're backward compatible.
   - =php artisan make:command=
   - =php artisan make:job=
   - =php artisan make:listener=
   - =php artisan event:generate=

** DONE Documentation and LTS
   CLOSED: [2018-07-18 Wed 12:34]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 12:34]
   We don't require a code editor for this one. For Laravel 5.1, the documentation has been massively improved - with Taylor Otwell going over each and every page. Event better, we now have excellent search at our fingertips.
   Not only that, but with version 5.1, your company instantly inhreits long term support: bug fixes for two years, and security fixes for three!

** DONE Middleware Parameters
   CLOSED: [2018-07-18 Wed 12:44]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 12:44]
   We've already reviewed middleware parameters at Laracasts, so this episode will serve as a quick, crash-course overview.
   - =php artisan make:middleware= and register the middleware to the =Kernel=
   - middleware parameters: =['middleware' => 'admin:JefferyWay, params, ...']=

** DONE Named Route Groups
   CLOSED: [2018-07-18 Wed 12:52]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 12:52]
   This next one is by no means a big feature, but it might prove useful in some situations. You may now apply a prefix to your named routes. I'll show how.
   #+BEGIN_SRC php
     Route::group(['prefix' => 'admin', 'as' => 'Admin.'], function () {
         Route::get('home', ['as' => 'home'], function() {
             return 'some view';
         });
     });
   #+END_SRC

** DONE Login Throttling
   CLOSED: [2018-07-18 Wed 13:51]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 13:51]
   Login throttling in Laravel 5.1 is a breeze! In this lesson, we'll review the basic concept, the implementation, and finally the underlying source code to make it possible.

** DONE Push Event to the Client
   CLOSED: [2018-07-18 Wed 14:13]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 14:13]
   You know how to fire an event with Laravel, but what about when you want that event to travel all the way to the client-side? How the heck do we do that?
   - =channel=
   - =channel.bind('event', () => {})=
   - Server side =onBroadCast= on specify channel

** DONE ACL in Laravel: Part 1
   CLOSED: [2018-07-18 Wed 15:13]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 15:13]
   Laravel 5.1 is the first release to offer ACL functionality straight out of the box. Let me show you how laughably simple it is to work with!
   - =AuthServiceProvider=
   - Define gate =$gate->define('showpost', function() {})=
   - Use defined gate =Gate::denies('show-post', $post)= and =Gate::allows()=
   - In controller use =$this->authorize('show-post')= to check permissions
   - In blade, use the =@can('update-post')=
   - =auth()= method or =Auth= facade get the current auth user.
   - Use =$request->user()->can('update-post')= get current user.

** DONE ACL in Laravel: Part 2 (Policy Objects)
   CLOSED: [2018-07-18 Wed 15:25]
   - State "DONE"       from "STARTED"    [2018-07-18 Wed 15:25]
   Let's continue with our review of Laravel's ACL capbilities, by reviewing policy objects.
   - =php artisan make:policy=
