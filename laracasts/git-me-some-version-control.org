* STARTED Get Me Some Version Control
 Version control can be a mysterious thing at first. Why exactly do I need this? Before long, you depend on it with your life. If you're new to this world, let me help!

** DONE Say Hi to Git
   CLOSED: [2018-07-25 Wed 12:17]
   - State "DONE"       from "STARTED"    [2018-07-25 Wed 12:17]
   As with most tools, step one is to install it! Let's tackle that, and then perform our first commit.
   - =git config --global user.name=myname= Set global user name
   - =git config --global user.email=test@example.com= Set global user email
   - =git config --global core.editor=vim= Set global git editor
   - =git init= Create or new a git repository
   - =git add some.txt=
   - =git status= Current directory status
   - =git commit=  =git commit -m "First commit"=
   - =git log= Get all the git commit log

** DONE What Git Add Actually Does
   CLOSED: [2018-07-26 Thu 17:48]
   - State "DONE"       from "STARTED"    [2018-07-26 Thu 17:48]
   So you've learned how to add and commit files. But what exactly does that even mean, and what does each command do? 'Tis confusion
   - =git status=
   - =git diff=

** DONE Fixing and Amending Commits
   CLOSED: [2018-07-26 Thu 17:59]
   - State "DONE"       from "STARTED"    [2018-07-26 Thu 17:59]
   Almost immediately, you'll fall into a trap where you've made a commit, only to realize that you forgot something or made any sort of error or typo. Do you create a new commit? Do you amend the last one? Do you start over from scratch? Don't worry, for such a common thing, the fix is easy.
   - =git reset --soft commitcode= git reset commit, but code still exists
   - =git reset --hard commitcode= git reset everying
   - =git commit --amend=
   - =git show commitcode= show the commit change
