* STARTED What's New in Laravel 52
 It's about that time again. Laravel 5.2 is on its way, with a variety of useful new additions. Let's get ahead of the game, and begin reviewing what's new.

** DONE Implicit Route Binding
   CLOSED: [2018-07-19 Thu 09:20]
   - State "DONE"       from "STARTED"    [2018-07-19 Thu 09:20]
   Laravel has offered route model binding for some time now. However, with Laravel 5.2, much of this process is now implicit. Need to fetch a record by its id? Just typehint the model, and Laravel will automatically send you the proper instance of it.
   - =$this->router->bind('route_name', clouser)=
   - Route wildcard name must the same as the clouser parameter name

** DONE API Rate Limiting
   CLOSED: [2018-07-19 Thu 09:36]
   - State "DONE"       from "STARTED"    [2018-07-19 Thu 09:36]
   When writing your APIs, you'll often need to limit the number of allowed requests. This way, one application or user can't pound your server with countless API calls. In Laravel 5.2, we get rate limiting right out of the box, via a new middleware.
   - httpie
     - =brew install httpie=
     - =http get http://localhost=
   - =middleware('throttle:30,5')=
     limit the api only 30 hit per 5 minutes.
   - http header
     - =X-RateLimit-Limit= and =X-RateLimit-Remaining=

** DONE Auth and Resets in Minutes
   CLOSED: [2018-07-19 Thu 09:50]
   - State "DONE"       from "STARTED"    [2018-07-19 Thu 09:50]
   In Laravel 5.2, you'll find a new =make:auth= command, which adds a helpful bit of view scaffolding to get you up and running as quickly as possible. Nearly every application requires authentication, login throttling, and password resets. Let's learn how to all of that in sixty seconds.

** DONE Validating Arrays
   CLOSED: [2018-07-19 Thu 10:04]
   - State "DONE"       from "STARTED"    [2018-07-19 Thu 10:04]
   In past versions of Laravel, if you needed to validate an array from a form, it was actually pretty annoying! But not anymore. Now the process is a cinch.
   - Manual create validator
     #+BEGIN_SRC php
       $validator = Validator::make($request->all(), [
           'email.*' => 'required|email'
       ]);

       if ($validator->fails()) {
           return back()->withInput()->withErrors($validator);
       }
     #+END_SRC
