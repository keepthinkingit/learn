* STARTED Intermediate Laravel
  Made your way through =Laravel 5 Fundamentals= yet? Nice job! It's time to dig a bit deeper. In this series, not only will we review higher level features, such as using the Scheduler component and dispatching commands and events, but we'll also often peak behind the scenes to figure out how each piece fits together.

** DONE Scheduling Commands and Tasks
   CLOSED: [2018-07-20 Fri 22:45]
   - State "DONE"       from "STARTED"    [2018-07-20 Fri 22:45]
   For any application, you'll need to trigger certain tasks at various points in time. Every month, or every day, or even every half-hour. Traditionally, this can be a confusing task, but not with Laravel!
   - =$schedule->exec('touch foo.txt')->everyFiveMinutes()=
   - =$schedule->exec('touch foo.txt')->dailyAt('10:30')=
   - =$schedule->command(laracasts:report')->dailyAt('10:30')->sendOutputTo(path/to/file)->emailOutputTo('')=

** DONE Scheduling Behind the Scenes
   CLOSED: [2018-07-20 Fri 23:29]
   - State "DONE"       from "STARTED"    [2018-07-20 Fri 23:29]
   The best way to become a better coder is to read a lot of code. Let's do that together in this lesson. Now that you understand the fundamentals of scheduling tasks, we'll flex our muscles and dig into underlying source code to figure out how this all works!
   - Write that what you eactly want to need.

** DONE The Power of Eventing
   CLOSED: [2018-07-21 Sat 17:26]
   - State "DONE"       from "STARTED"    [2018-07-21 Sat 17:26]
   Laravel offers an incredibly powerful eventing system. Likely more powerful than you're aware. Over the course of the next two lessons, we'll both review the essentials and dig into the underlying source code that orchestrates Laravel's event handling.

** DONE Eventing: Behind the Scenes
   CLOSED: [2018-07-23 Mon 16:59]
   - State "DONE"       from "STARTED"    [2018-07-23 Mon 16:59]
** DONE Illuminate Contracts
   CLOSED: [2018-07-23 Mon 22:06]
   - State "DONE"       from "STARTED"    [2018-07-23 Mon 22:06]
     Laravel 5 includes a comprehensive set of contracts, or interfaces, for all of its various components. This means, for the projects where it makes sense to seek maximum decoupling, never before has such a task been easier.

** DONE Containers, Alias and Contracts: Behind the Scenes
   CLOSED: [2018-07-23 Mon 22:34]
   - State "DONE"       from "TODO"       [2018-07-23 Mon 22:34]
   Based on our learning from the previous episode, it seems as if multiple keys point to the same binding within Laravel's service container. How exactly does this work? Let's once again peel back the curtain, and figure this out.
